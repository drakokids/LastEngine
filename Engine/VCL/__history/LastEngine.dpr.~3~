program LastEngine;

{$APPTYPE CONSOLE}

{$R *.res}

uses
  System.SysUtils,
  Classes,
  Windows,
  dglOpenGL,sdl2,
  glFunctions in 'glFunctions.pas';

var
    surface     : PSDL_Surface;
    videoflags  : Uint32;
    FPSCount    : LongInt;
    GLHandle: HINST;
    GLUHandle: HINST;

procedure glHandleEvents;
var event       : TSDL_Event;
begin;
    // Verarbeiten der Events
    while ( SDL_PollEvent( @event ) = 1 ) do
    begin
      case event.type_ of

        // Beenden der Applikation
        SDL_QUITEV :
        begin
          Done := -1;
        end;

        // Taste wurde gedrückt
        SDL_KEYDOWN :
        begin
          glHandleKeyPress( @event.key.keysym );
        end;

        // Fenster-Größe hat sich verändert
        SDL_VIDEORESIZE :
        begin
          surface := SDL_SetVideoMode( event.resize.w, event.resize.h, SCREEN_BPP, videoflags );

          if ( surface = nil ) then
          begin
            Log.LogError('Surface bei Größenänderung verloren: '+SDL_GetError,'EVENT_RESIZE' );
            Quit_App;
          end;

          glResizeWindow( event.resize.w, event.resize.h );
        end;
      end;
    end;
end;
begin;
    SDL_WM_SetCaption(pChar( WINDOWS_CAPTION + ' ['+IntToStr(Round(FPSCount * 1000/FPS_INTERVAL))+' FPS]') , nil);
    FPSCount := 0;
    Result := interval;
end;

begin
  Init_SDL;
  Init_OpenGL;
  SDL_AddTimer(FPS_INTERVAL,@glTimer,nil);
  glResizeWindow( SCREEN_WIDTH, SCREEN_HEIGHT );
  while ( Done <> -1 ) do
  begin
    glHandleEvents;
    glDrawScene;
    Inc(FPSCount);
  end;

  Quit_App;
end.
